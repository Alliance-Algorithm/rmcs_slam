rmcs_map:
    ros__parameters:
        name:
            # publish
            grid: "/rmcs_map/map/grid"
            cost: "/rmcs_map/map/cost"
            status: "/rmcs_map/status"
            lidar: "/rmcs_slam/combination"
            # other
            node: "rmcs_map"
            # 把地图和雷达的变换统一, 此处默认雷达的点云
            # 已经被纠正到 base link 的正方向距离地面0m处
            frame:
                map: "map_link"
                lidar: "lidar_link"
        # process config
        switch:
            # livox | pointcloud2
            pointcloud_type: "pointcloud2"
            cost_map: false
            grid_map: true
            # 你想要发布点云吗，我可以提供完整点云和
            # 剔除掉地板的点云
            publish_cloud: true
            publish_test: false
        lidar:
            # 单帧点云浮动比较大，多帧累积起来障碍物会拖长，
            # 以及未纠正到位的旋转畸变会叠加，但障碍地图会稳定很多
            livox_frames: 2
        segmentation:
            # 点云分割中迭代的最大相邻点的距离
            # 这个距离内的点云被视作统一平面内
            point_distance: 0.1
            # 点云分割中选取的高度
            ground_height: 0.2
        grid:
            # 栅格地图的分辨率，单位 m
            resolution: 0.02
            # 栅格地图边长，单位 m
            grid_width: 10.1
            # 雷达的盲区，球形直径
            lidar_blind: 0.8
            # 有效点数量阈值，出现在网格的点大于该数才视作有效
            points_limit: 5
            # 有效点高度区间阈值，障碍物高度区间大于此值才视作有效
            height_limit: 0.05
        filter:
            # 预先膨胀，为了更好的闭合障碍物
            pre_dilate_size: 5
            pre_dilate_times: 1
            # 闭合，拟补激光雷达点云的缺口
            pre_close_size: 3
            pre_close_times: 1
            # 最后膨胀提升容错率
            dilate_size: 3
